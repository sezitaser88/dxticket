import * as _bloomreach_spa_sdk from '@bloomreach/spa-sdk';
import { Component, Page, Container, ContainerItem, ManageContentButton, Menu, Configuration, PageModel } from '@bloomreach/spa-sdk';
import React from 'react';

/**
 * The React Context holding the current brXM Component.
 */
declare const BrComponentContext: React.Context<Component | undefined>;

interface BrComponentProps {
    /**
     * The path to a component.
     * The path is defined as a slash-separated components name chain
     * relative to the current component (e.g. `main/container`).
     * If it is omitted, all the children will be rendered.
     */
    path?: string;
}
/**
 * The brXM component.
 */
declare class BrComponent$1 extends React.Component<BrComponentProps> {
    static contextType: React.Context<Component | undefined>;
    context: React.ContextType<typeof BrComponentContext>;
    private getComponents;
    private renderComponents;
    render(): JSX.Element;
}

/**
 * The mapped component properties.
 */
interface BrProps<T extends Component = Component> {
    /**
     * The mapped component.
     */
    component: T;
    /**
     * The current page.
     */
    page: Page;
}

declare type BrComponent = React.ComponentType<BrProps<Component>> | React.ComponentType<BrProps<Container>> | React.ComponentType<BrProps<ContainerItem>>;
declare const BrMappingContext: React.Context<Record<string | number | symbol, BrComponent>>;

/**
 * The React Context holding the current brXM Page.
 */
declare const BrPageContext: React.Context<Page | undefined>;

/**
 * The button component that opens for editing a content.
 */
declare class BrManageContentButton extends React.Component<ManageContentButton> {
    static contextType: React.Context<_bloomreach_spa_sdk.Page | undefined>;
    context: React.ContextType<typeof BrPageContext>;
    render(): JSX.Element | null;
}

interface BrManageMenuButtonProps {
    /**
     * The related menu model.
     */
    menu: Menu;
}
/**
 * The button component that opens a menu editor.
 */
declare class BrManageMenuButton extends React.Component<BrManageMenuButtonProps> {
    static contextType: React.Context<_bloomreach_spa_sdk.Page | undefined>;
    context: React.ContextType<typeof BrPageContext>;
    render(): JSX.Element | null;
}

interface BrPageProps {
    /**
     * The configuration of the SPA SDK.
     * @see https://www.npmjs.com/package/@bloomreach/spa-sdk#configuration
     */
    configuration: Configuration;
    /**
     * The brXM and React components mapping.
     */
    mapping: React.ContextType<typeof BrMappingContext>;
    /**
     * The pre-initialized page instance or prefetched page model.
     * Mostly this property should be used to transfer state from the server-side to the client-side.
     */
    page?: Page | PageModel;
}
interface BrPageState {
    page?: Page;
}
/**
 * @typedef {Object} BrPageProps
 * @property {Configuration} configuration The configuration of the SPA SDK.
 * @property {Object} mapping The brXM and React components mapping.
 * @property {Page | PageModel | undefined} page The pre-initialized page instance or prefetched page model.
 * Mostly this property should be used to transfer state from the server-side to the client-side.
 */
/**
 * The brXM page.
 */
declare class BrPage extends React.Component<BrPageProps, BrPageState> {
    /**
     * @param props {BrPageProps}
     */
    constructor(props: BrPageProps);
    componentDidMount(): void;
    componentDidUpdate(prevProps: BrPageProps, prevState: BrPageState): void;
    componentWillUnmount(): void;
    private initialize;
    private destroy;
    render(): JSX.Element | null;
}

export { BrComponent$1 as BrComponent, BrComponentContext, BrManageContentButton, BrManageMenuButton, BrPage, BrPageContext, BrProps };
